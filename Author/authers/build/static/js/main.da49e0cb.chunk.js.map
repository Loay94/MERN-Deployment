{"version":3,"sources":["components/UpdateAuthor.js","components/AuthorsTable.js","components/CreateAuthorForm.js","App.js","reportWebVitals.js","index.js"],"names":["UpdateAuthor","props","id","useState","name","setName","errors","setErrors","useEffect","axios","get","then","res","data","to","onSubmit","e","preventDefault","put","navigate","catch","err","errorResponse","response","errorArr","Object","keys","key","push","message","className","map","index","style","color","value","onChange","target","type","onClick","marginLeft","AuthorsTable","authors","setAuthors","error","console","log","deleteAuthor","delete","filter","person","_id","removeFromDom","length","item","handleClick","CreateAuthorForm","post","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAmDeA,EA/CM,SAACC,GAAW,IAErBC,EAAOD,EAAPC,GAFoB,EAGHC,mBAAS,IAHN,mBAGrBC,EAHqB,KAGdC,EAHc,OAIAF,mBAAS,IAJT,mBAIrBG,EAJqB,KAIbC,EAJa,KAO5BC,qBAAU,WACNC,IAAMC,IAAI,uCAAuCR,GAChDS,MAAK,SAAAC,GAAOP,EAASO,EAAIC,KAAKT,WAChC,IAmBH,OACI,gCACI,iDACA,4BAAG,cAAC,IAAD,CAAMU,GAAG,IAAT,oBACH,uBAAMC,SAtBQ,SAAAC,GAClBA,EAAEC,iBACFR,IAAMS,IAAI,oCAAsChB,EAAK,CACjDE,KAAOA,IAENO,MAAK,kBAAMQ,YAAS,QACpBC,OAAM,SAAAC,GAGH,IAFA,IAAMC,EAAgBD,EAAIE,SAASV,KAAKP,OAClCkB,EAAW,GACjB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAA8C,CAAzC,IAAMK,EAAG,KACVH,EAASI,KAAKN,EAAcK,GAAKE,SAGrCtB,EAAUiB,OASd,UACI,sBAAKM,UAAU,aAAf,UACI,2CAAcxB,EAAOyB,KAAI,SAACV,EAAKW,GAAN,OAAgB,uBAAmBC,MAAO,CAACC,MAAM,OAAjC,SAA0Cb,GAA9BW,SACrD,uBAAOG,MAAO/B,EAAMgC,SAAU,SAACpB,GAAD,OAAKX,EAAQW,EAAEqB,OAAOF,QAAQG,KAAK,OAAOR,UAAU,oBAEtF,sBAAKA,UAAU,wBAAf,UACI,wBAAQS,QAAS,kBAAIpB,YAAS,MAAMmB,KAAK,SAASR,UAAU,2BAA5D,qBACA,wBAAQA,UAAU,yBAAyBG,MAAO,CAACO,WAAY,QAA/D,8BCOLC,EA/CM,SAACxC,GAAW,IAAD,EACEE,mBAAS,IADX,mBACrBuC,EADqB,KACZC,EADY,KAG5BnC,qBAAW,WACPC,IAAMC,IAAI,2CACLC,MAAK,SAAAY,GAAQ,OAAIoB,EAAYpB,EAASV,SACtCO,OAAM,SAAAwB,GAAK,OAAIC,QAAQC,IAAI,uBAAwBF,QAC1D,IAEF,IAWMG,EAAe,SAAC7C,GAClBO,IAAMuC,OAAO,oCAAoC9C,GAC5CS,MAAK,SAAAC,IANQ,SAAAV,GAClByC,EAAWD,EAAQO,QAAO,SAAAC,GAAM,OAAIA,EAAOC,KAAOjD,MAM1CkD,CAAclD,GACd2C,QAAQC,IAAI5C,OAIxB,OACI,sBAAK4B,UAAU,cAAf,UACKY,EAAQW,OAAS,GAAKX,EAAQX,KAAI,SAACuB,EAAMtB,GAEtC,OAAQ,gCACJ,8BAAkBsB,EAAKlD,MAAb4B,GACV,wBAAQO,QAAS,SAACvB,GAAD,OAtBf,SAACA,EAAEd,GACjBc,EAAEC,iBACFE,YAAS,WAAWjB,EAAG,SAoBaqD,CAAYvC,EAAGsC,EAAKH,MAA5C,iBAAuDnB,GACvD,wBAAQO,QAAS,SAACvB,GAAK+B,EAAaO,EAAKH,MAAzC,mBAAqDnB,SAKzD,uBAAOM,KAAK,SAASH,MAAM,wCAAwCI,QA/BpD,WACvBpB,YAAS,eCyCFqC,EAnDU,SAAAvD,GAAU,IAAD,EAENE,mBAAS,IAFH,mBAEvBC,EAFuB,KAEjBC,EAFiB,OAGFF,mBAAS,IAHP,mBAGvBG,EAHuB,KAGfC,EAHe,KAsB9B,OACI,sBAAKuB,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,UACI,4BAAG,cAAC,IAAD,CAAMhB,GAAG,IAAT,oBACH,sDAEQR,EAAOyB,KAAI,SAACV,EAAKW,GAAN,OAAgB,uBAAmBC,MAAO,CAACC,MAAM,OAAjC,SAA0Cb,GAA9BW,cAKvD,qBAAKF,UAAU,MAAf,SACI,qBAAKA,UAAU,QAAf,SACI,uBAAMf,SA/BL,SAAAC,GACbA,EAAEC,iBACFR,IAAMgD,KAAK,4CAA6C,CACpDrD,KAAMA,IAELO,MAAK,kBAAMQ,YAAS,QACpBC,OAAM,SAAAC,GAGH,IAFA,IAAMC,EAAgBD,EAAIE,SAASV,KAAKP,OAClCkB,EAAW,GACjB,MAAkBC,OAAOC,KAAKJ,GAA9B,eAA8C,CAAzC,IAAMK,EAAG,KACVH,EAASI,KAAKN,EAAcK,GAAKE,SAGrCtB,EAAUiB,OAkBN,UACI,sBAAKM,UAAU,aAAf,UACI,0CACA,uBAAOM,SAAU,SAACpB,GAAD,OAAKX,EAAQW,EAAEqB,OAAOF,QAAQG,KAAK,OAAOR,UAAU,oBAEzE,sBAAKA,UAAU,wBAAf,UACI,wBAAQS,QAAS,kBAAIpB,YAAS,MAAMmB,KAAK,SAASR,UAAU,2BAA5D,oBACA,wBAAQA,UAAU,yBAAyBG,MAAO,CAACO,WAAY,QAA/D,kCC3BbkB,MAZf,WACE,OACE,qBAAK5B,UAAU,MAAf,SACA,eAAC,IAAD,WACE,cAAC,EAAD,CAAc6B,KAAK,MACnB,cAAC,EAAD,CAAkBA,KAAK,SACvB,cAAC,EAAD,CAAcA,KAAK,0BCFVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnD,MAAK,YAAkD,IAA/CoD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.da49e0cb.chunk.js","sourcesContent":["import React,{ useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { navigate, Link } from \"@reach/router\"\r\n\r\nconst UpdateAuthor = (props) => {\r\n\r\n    const { id } = props;\r\n    const [name , setName ]= useState(\"\");\r\n    const [errors, setErrors] = useState([])\r\n\r\n\r\n    useEffect(() =>{\r\n        axios.get('http://localhost:8000/api/getAuthor/'+id)\r\n        .then(res =>{setName( res.data.name)} );\r\n    }, [])\r\n    const updateProduct = e => {\r\n        e.preventDefault();\r\n        axios.put('http://localhost:8000/api/update/' + id , {\r\n            name : name,\r\n                })\r\n            .then(() => navigate(\"/\"))\r\n            .catch(err =>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Update a Author</h1>\r\n            <p><Link to=\"/\">Home</Link></p>\r\n            <form onSubmit={ updateProduct }>\r\n                <div className=\"form-group\">\r\n                    <label>Name: {errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)}</label>\r\n                    <input value={name} onChange={(e)=>setName(e.target.value)} type=\"text\" className=\"form-control\"/>\r\n                </div>\r\n                <div className=\"form-group text-right\">\r\n                    <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Go Back</button>\r\n                    <button className=\"btn btn-primary btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateAuthor\r\n","import React, {useState, useEffect} from \"react\"\r\nimport axios from \"axios\"\r\nimport { navigate } from \"@reach/router\"\r\n\r\nconst AuthorsTable = (props) => {\r\n    const [authors, setAuthors] = useState([])\r\n\r\n    useEffect( () => {\r\n        axios.get(\"http://localhost:8000/api/getAllAuthors\")\r\n            .then(response => setAuthors((response.data)))\r\n            .catch(error => console.log(\"There was an issue: \", error))\r\n    },[])\r\n\r\n    const navigateToNewRoute = () => {\r\n        navigate(\"/new\");\r\n    }\r\n    const handleClick=(e,id) =>{\r\n        e.preventDefault();\r\n        navigate(\"/author/\"+id+\"/edit\");\r\n    }\r\n    const removeFromDom = id => {\r\n        setAuthors(authors.filter(person => person._id != id));\r\n    }\r\n    \r\n    const deleteAuthor = (id) => {\r\n        axios.delete(\"http://localhost:8000/api/delete/\"+id)\r\n            .then(res => {\r\n                removeFromDom(id)\r\n                console.log(id);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className=\"countaineer\">\r\n            {authors.length > 0 && authors.map((item, index) =>{\r\n\r\n                return( <div>\r\n                    <div key={index}>{item.name}</div>\r\n                    <button onClick={(e) => handleClick(e, item._id)} key={index}>Edit</button>\r\n                    <button onClick={(e)=>{deleteAuthor(item._id)}} key={index}>Delete</button>                \r\n                    </div>\r\n                )\r\n            }\r\n            )}\r\n                <input type=\"button\" value=\"Please Press Here to Add a New Author\" onClick={navigateToNewRoute}/>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthorsTable\r\n","import React, { useState } from \"react\"\r\nimport axios from \"axios\"\r\nimport { navigate, Link } from \"@reach/router\"\r\n\r\nconst CreateAuthorForm = props => {\r\n\r\n    const [name, setName] = useState(\"\")\r\n    const [errors, setErrors] = useState([])\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/api/createNewAuthor\", {\r\n            name: name,\r\n        })\r\n            .then(() => navigate(\"/\"))\r\n            .catch(err =>{\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n            })\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <p><Link to=\"/\">Home</Link></p>\r\n                    <p>Add a new author:&nbsp;\r\n                        {\r\n                            errors.map((err, index) => <small key={index} style={{color:\"red\"}}>{err}</small>)\r\n                        }\r\n                    </p>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                    <form onSubmit={ onSubmit }>\r\n                        <div className=\"form-group\">\r\n                            <label>Name:</label>\r\n                            <input onChange={(e)=>setName(e.target.value)} type=\"text\" className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"form-group text-right\">\r\n                            <button onClick={()=>navigate(\"/\")} type=\"button\" className=\"btn btn-secondary btn-sm\">Cancel</button>\r\n                            <button className=\"btn btn-primary btn-sm\" style={{marginLeft: \"10px\"}}>Submit</button>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default CreateAuthorForm","import './App.css';\nimport {Router} from \"@reach/router\";\nimport React, { useState } from 'react';\nimport UpdateAuthor from \"./components/UpdateAuthor\"\nimport AuthorsTable from \"./components/AuthorsTable\"\nimport CreateAuthorForm from \"./components/CreateAuthorForm\"\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <Router>\n      <AuthorsTable path=\"/\"/>\n      <CreateAuthorForm path=\"/new\" />\n      <UpdateAuthor path=\"author/:id/edit\" />\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}